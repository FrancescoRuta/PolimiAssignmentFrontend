
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$contrast-dark: rgba(black, 0.87);
$contrast-light: white;

/*$frontend-primary: mat.define-palette((
	50: #eceefc,
	100: #cfd5f7,
	200: #afb9f2,
	300: #8e9cec,
	400: #7687e8,
	500: #5e72e4,
	600: #566ae1,
	700: #4c5fdd,
	800: #4255d9,
	900: #3142d1,
	contrast: (
		50: $contrast-dark,
		100: $contrast-dark,
		200: $contrast-dark,
		300: $contrast-dark,
		400: $contrast-dark,
		500: $contrast-light,
		600: $contrast-light,
		700: $contrast-light,
		800: $contrast-light,
		900: $contrast-light,
	),
));*/
$frontend-primary: mat.define-palette((
	50: #e3e7ed,
	100: #bac3d3,
	200: #8c9bb5,
	300: #5d7397,
	400: #3b5581,
	500: #18376b,
	600: #153163,
	700: #112a58,
	800: #0e234e,
	900: #08163c,
	A100: #7491ff,
	A200: #4169ff,
	A400: #0e41ff,
	A700: #0034f3,
	contrast: (
		50: $contrast-dark,
		100: $contrast-dark,
		200: $contrast-dark,
		300: $contrast-dark,
		400: $contrast-light,
		500: $contrast-light,
		600: $contrast-light,
		700: $contrast-light,
		800: $contrast-light,
		900: $contrast-light,
		A100: $contrast-dark,
		A200: $contrast-light,
		A400: $contrast-light,
		A700: $contrast-light,
	),
));

$frontend-accent: mat.define-palette((
	50: #fefeff,
	100: #fdfefe,
	200: #fbfdfe,
	300: #f9fcfd,
	400: #f8fbfc,
	500: #f7fafc,
	600: #f6f9fc,
	700: #f5f9fb,
	800: #f3f8fb,
	900: #f1f6fa,
	contrast: (
		50: $contrast-dark,
		100: $contrast-dark,
		200: $contrast-dark,
		300: $contrast-dark,
		400: $contrast-dark,
		500: $contrast-dark,
		600: $contrast-dark,
		700: $contrast-dark,
		800: $contrast-dark,
		900: $contrast-dark,
	),
));

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);
/*
$frontend-warn: mat.define-palette((
	50: #ffece8,
	100: #fed0c6,
	200: #fdb1a0,
	300: #fc9279,
	400: #fc7a5d,
	500: #fb6340,
	600: #fa5b3a,
	700: #fa5132,
	800: #f9472a,
	900: #f8351c,
	A100: #ffffff,
	A200: #fffaf9,
	A400: #ffcbc6,
	A700: #ffb4ad,
	contrast: (
		50: $contrast-dark,
		100: $contrast-dark,
		200: $contrast-dark,
		300: $contrast-dark,
		400: $contrast-light,
		500: $contrast-light,
		600: $contrast-light,
		700: $contrast-light,
		800: $contrast-light,
		900: $contrast-light,
		A100: $contrast-dark,
		A200: $contrast-dark,
		A400: $contrast-dark,
		A700: $contrast-dark,
	),
));*/

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

$frontend-theme: mat.define-light-theme((
  color: (
    primary: $frontend-primary,
    accent: $frontend-accent,
    warn: $frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

